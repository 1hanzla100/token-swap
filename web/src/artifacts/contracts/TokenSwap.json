{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "changeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "sellTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Hanzla/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "2": "C:/Users/Hanzla/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/Hanzla/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "6": "contracts/TokenSwap.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        995
      ],
      "IERC20": [
        973
      ],
      "Ownable": [
        307
      ],
      "TokenSwap": [
        202
      ]
    },
    "id": 203,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 44,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "C:/Users/Hanzla/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 45,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 974,
        "src": "57:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Hanzla/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 46,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 203,
        "sourceUnit": 308,
        "src": "114:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 307,
              "src": "190:7:6"
            },
            "id": 48,
            "nodeType": "InheritanceSpecifier",
            "src": "190:7:6"
          }
        ],
        "canonicalName": "TokenSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 202,
        "linearizedBaseContracts": [
          202,
          307,
          995
        ],
        "name": "TokenSwap",
        "nameLocation": "177:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "221:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "204:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$973",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 50,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 973,
                "src": "204:6:6"
              },
              "referencedDeclaration": 973,
              "src": "204:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$973",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "rate",
            "nameLocation": "240:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 202,
            "src": "232:12:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 52,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "232:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "294:221:6",
              "statements": [
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "304:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$973",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "319:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 973,
                        "src": "312:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$973_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "312:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$973",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "304:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$973",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "304:22:6"
                },
                {
                  "expression": {
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "336:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "343:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "336:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "336:12:6"
                }
              ]
            },
            "id": 71,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "271:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "263:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "287:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "279:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "262:31:6"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:6"
            },
            "scope": 202,
            "src": "251:264:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "576:32:6",
              "statements": [
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "586:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "_newRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "593:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "586:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "586:15:6"
                }
              ]
            },
            "functionSelector": "74e7493b",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 76,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 75,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 249,
                  "src": "566:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "566:9:6"
              }
            ],
            "name": "changeRate",
            "nameLocation": "530:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_newRate",
                  "nameLocation": "549:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "541:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:18:6"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:0:6"
            },
            "scope": 202,
            "src": "521:87:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "663:28:6",
              "statements": [
                {
                  "expression": {
                    "id": 88,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "680:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 89,
                  "nodeType": "Return",
                  "src": "673:11:6"
                }
              ]
            },
            "functionSelector": "679aefce",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nameLocation": "623:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:2:6"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "654:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:9:6"
            },
            "scope": 202,
            "src": "614:77:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "747:38:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "772:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$973",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$973",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "764:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "764:7:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "764:14:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 95,
                  "id": 100,
                  "nodeType": "Return",
                  "src": "757:21:6"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "706:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:2:6"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "738:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:9:6"
            },
            "scope": 202,
            "src": "697:88:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "827:223:6",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "845:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "837:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "837:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 107,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "854:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "854:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 109,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "866:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "837:33:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 117,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "925:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$202",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$202",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "917:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 115,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "917:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "917:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 113,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "901:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$973",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 912,
                            "src": "901:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 120,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "935:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "901:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        },
                        "value": "Not enough tokens in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "880:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "880:119:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "880:119:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1024:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1024:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1036:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1009:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$973",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 922,
                      "src": "1009:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1009:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1009:34:6"
                }
              ]
            },
            "functionSelector": "d0febe4c",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTokens",
            "nameLocation": "800:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:2:6"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:0:6"
            },
            "scope": 202,
            "src": "791:259:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "1100:444:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 144,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1155:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1155:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1147:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 142,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1147:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1147:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 140,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1131:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$973",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 912,
                            "src": "1131:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1131:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 148,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "1171:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1131:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320746f2073656c6c",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1192:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a82275b6b65ef6f8ac98bda8a9b6e5bf6374645eb19df5ace6a8ec4bc061b27",
                          "typeString": "literal_string \"Not enough tokens to sell\""
                        },
                        "value": "Not enough tokens to sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a82275b6b65ef6f8ac98bda8a9b6e5bf6374645eb19df5ace6a8ec4bc061b27",
                          "typeString": "literal_string \"Not enough tokens to sell\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1110:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:119:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:119:6"
                },
                {
                  "assignments": [
                    154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "etherAmount",
                      "nameLocation": "1247:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1239:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1239:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 158,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 155,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "1261:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 156,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1271:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1261:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1239:36:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 162,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1301:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenSwap_$202",
                                  "typeString": "contract TokenSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenSwap_$202",
                                  "typeString": "contract TokenSwap"
                                }
                              ],
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1293:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 160,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1293:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1293:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1293:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 165,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1318:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1293:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420456e6f756768204574686572",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1331:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
                          "typeString": "literal_string \"Not Enough Ether\""
                        },
                        "value": "Not Enough Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ea324e8b8c558052b533421a3f8af4450d8e4ace9d510c596cc4d9779946a8d",
                          "typeString": "literal_string \"Not Enough Ether\""
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1285:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1285:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1285:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1379:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1379:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1399:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$202",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$202",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1391:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1391:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1391:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 179,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "1406:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 170,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1360:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$973",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 954,
                      "src": "1360:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1360:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:54:6"
                },
                {
                  "assignments": [
                    183,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1430:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1425:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1425:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 194,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1488:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1451:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1451:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1443:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 184,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1443:8:6",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1443:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1443:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 190,
                          "name": "etherAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "1475:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1443:44:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "1509:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1518:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1501:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1501:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:36:6"
                }
              ]
            },
            "functionSelector": "6c11bcd3",
            "id": 201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellTokens",
            "nameLocation": "1065:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1084:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "1076:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:17:6"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:0:6"
            },
            "scope": 202,
            "src": "1056:488:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 203,
        "src": "168:1378:6",
        "usedErrors": []
      }
    ],
    "src": "32:1515:6"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516108fd3803806108fd83398101604081905261002f9161009e565b6100383361004e565b6001600160a01b039091166080526001556100d8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b157600080fd5b82516001600160a01b03811681146100c857600080fd5b6020939093015192949293505050565b6080516107ef61010e60003960008181608f0152818161019e015281816102db01528181610478015261054d01526107ef6000f3fe60806040526004361061007b5760003560e01c806374e7493b1161004e57806374e7493b146101215780638da5cb5b14610141578063d0febe4c1461015f578063f2fde38b1461016757600080fd5b806321df0da714610080578063679aefce146100cc5780636c11bcd3146100ea578063715018a61461010c575b600080fd5b34801561008c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d857600080fd5b506001546040519081526020016100c3565b3480156100f657600080fd5b5061010a6101053660046106b1565b610187565b005b34801561011857600080fd5b5061010a6103e1565b34801561012d57600080fd5b5061010a61013c3660046106b1565b610417565b34801561014d57600080fd5b506000546001600160a01b03166100af565b61010a610446565b34801561017357600080fd5b5061010a6101823660046106ca565b6105c6565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021191906106fa565b10156102645760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f2073656c6c0000000000000060448201526064015b60405180910390fd5b6000600154826102749190610713565b9050804710156102b95760405162461bcd60e51b815260206004820152601060248201526f2737ba1022b737bab3b41022ba3432b960811b604482015260640161025b565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190610735565b50604051600090339083908381818185875af1925050503d8060008114610393576040519150601f19603f3d011682016040523d82523d6000602084013e610398565b606091505b50509050806103dc5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161025b565b505050565b6000546001600160a01b0316331461040b5760405162461bcd60e51b815260040161025b90610757565b6104156000610661565b565b6000546001600160a01b031633146104415760405162461bcd60e51b815260040161025b90610757565b600155565b600060015434610456919061078c565b6040516370a0823160e01b815230600482015290915081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906106fa565b10156105315760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665604482015260640161025b565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c29190610735565b5050565b6000546001600160a01b031633146105f05760405162461bcd60e51b815260040161025b90610757565b6001600160a01b0381166106555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025b565b61065e81610661565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106c357600080fd5b5035919050565b6000602082840312156106dc57600080fd5b81356001600160a01b03811681146106f357600080fd5b9392505050565b60006020828403121561070c57600080fd5b5051919050565b60008261073057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561074757600080fd5b815180151581146106f357600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156107b457634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212205fe427b6f9769bde0a0b7bb10cda534c8e81f28139b409b4a3eba8bb4b42811564736f6c634300080d0033",
  "bytecodeSha1": "7c858366eee2d546e7681f885c899f1237e47ab2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "TokenSwap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "20": [
            2006,
            2028,
            true
          ]
        }
      },
      "2": {},
      "4": {},
      "6": {
        "TokenSwap.buyTokens": {
          "19": [
            901,
            941,
            true
          ]
        },
        "TokenSwap.sellTokens": {
          "16": [
            1131,
            1178,
            true
          ],
          "17": [
            1293,
            1329,
            true
          ],
          "18": [
            1509,
            1516,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "14": [
            2378,
            2395
          ],
          "15": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1998,
            2071
          ],
          "13": [
            2081,
            2109
          ]
        }
      },
      "2": {},
      "4": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "6": {
        "TokenSwap.buyTokens": {
          "10": [
            880,
            999
          ],
          "11": [
            1009,
            1043
          ]
        },
        "TokenSwap.changeRate": {
          "9": [
            586,
            601
          ]
        },
        "TokenSwap.getRate": {
          "1": [
            673,
            684
          ]
        },
        "TokenSwap.getToken": {
          "0": [
            757,
            778
          ]
        },
        "TokenSwap.sellTokens": {
          "3": [
            1110,
            1229
          ],
          "4": [
            1285,
            1350
          ],
          "5": [
            1360,
            1414
          ],
          "6": [
            1501,
            1537
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "60806040526004361061007b5760003560e01c806374e7493b1161004e57806374e7493b146101215780638da5cb5b14610141578063d0febe4c1461015f578063f2fde38b1461016757600080fd5b806321df0da714610080578063679aefce146100cc5780636c11bcd3146100ea578063715018a61461010c575b600080fd5b34801561008c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100d857600080fd5b506001546040519081526020016100c3565b3480156100f657600080fd5b5061010a6101053660046106b1565b610187565b005b34801561011857600080fd5b5061010a6103e1565b34801561012d57600080fd5b5061010a61013c3660046106b1565b610417565b34801561014d57600080fd5b506000546001600160a01b03166100af565b61010a610446565b34801561017357600080fd5b5061010a6101823660046106ca565b6105c6565b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156101ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021191906106fa565b10156102645760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f2073656c6c0000000000000060448201526064015b60405180910390fd5b6000600154826102749190610713565b9050804710156102b95760405162461bcd60e51b815260206004820152601060248201526f2737ba1022b737bab3b41022ba3432b960811b604482015260640161025b565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190610735565b50604051600090339083908381818185875af1925050503d8060008114610393576040519150601f19603f3d011682016040523d82523d6000602084013e610398565b606091505b50509050806103dc5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161025b565b505050565b6000546001600160a01b0316331461040b5760405162461bcd60e51b815260040161025b90610757565b6104156000610661565b565b6000546001600160a01b031633146104415760405162461bcd60e51b815260040161025b90610757565b600155565b600060015434610456919061078c565b6040516370a0823160e01b815230600482015290915081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906106fa565b10156105315760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665604482015260640161025b565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561059e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c29190610735565b5050565b6000546001600160a01b031633146105f05760405162461bcd60e51b815260040161025b90610757565b6001600160a01b0381166106555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025b565b61065e81610661565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106c357600080fd5b5035919050565b6000602082840312156106dc57600080fd5b81356001600160a01b03811681146106f357600080fd5b9392505050565b60006020828403121561070c57600080fd5b5051919050565b60008261073057634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561074757600080fd5b815180151581146106f357600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008160001904831182151516156107b457634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212205fe427b6f9769bde0a0b7bb10cda534c8e81f28139b409b4a3eba8bb4b42811564736f6c634300080d0033",
  "deployedSourceMap": "168:1378:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:88;;;;;;;;;;-1:-1:-1;772:5:6;697:88;;;-1:-1:-1;;;;;178:32:7;;;160:51;;148:2;133:18;697:88:6;;;;;;;;614:77;;;;;;;;;;-1:-1:-1;680:4:6;;614:77;;368:25:7;;;356:2;341:18;614:77:6;222:177:7;1056:488:6;;;;;;;;;;-1:-1:-1;1056:488:6;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;521:87:6:-;;;;;;;;;;-1:-1:-1;521:87:6;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;791:259:6;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1056:488:6:-;1131:36;;-1:-1:-1;;;1131:36:6;;1155:10;1131:36;;;160:51:7;1171:7:6;;1131:5;-1:-1:-1;;;;;1131:15:6;;;;133:18:7;;1131:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1110:119;;;;-1:-1:-1;;;1110:119:6;;1271:2:7;1110:119:6;;;1253:21:7;1310:2;1290:18;;;1283:30;1349:27;1329:18;;;1322:55;1394:18;;1110:119:6;;;;;;;;;1239:19;1271:4;;1261:7;:14;;;;:::i;:::-;1239:36;;1318:11;1293:21;:36;;1285:65;;;;-1:-1:-1;;;1285:65:6;;1847:2:7;1285:65:6;;;1829:21:7;1886:2;1866:18;;;1859:30;-1:-1:-1;;;1905:18:7;;;1898:46;1961:18;;1285:65:6;1645:340:7;1285:65:6;1360:54;;-1:-1:-1;;;1360:54:6;;1379:10;1360:54;;;2230:34:7;1399:4:6;2280:18:7;;;2273:43;2332:18;;;2325:34;;;1360:5:6;-1:-1:-1;;;;;1360:18:6;;;;2165::7;;1360:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1443:48:6;;1425:12;;1451:10;;1475:11;;1425:12;1443:48;1425:12;1443:48;1475:11;1451:10;1443:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:67;;;1509:7;1501:36;;;;-1:-1:-1;;;1501:36:6;;3064:2:7;1501:36:6;;;3046:21:7;3103:2;3083:18;;;3076:30;-1:-1:-1;;;3122:18:7;;;3115:46;3178:18;;1501:36:6;2862:340:7;1501:36:6;1100:444;;1056:488;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;521:87:6:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;586:4:6::1;:15:::0;521:87::o;791:259::-;837:14;866:4;;854:9;:16;;;;:::i;:::-;901:30;;-1:-1:-1;;;901:30:6;;925:4;901:30;;;160:51:7;837:33:6;;-1:-1:-1;837:33:6;;-1:-1:-1;;;;;901:5:6;:15;;;;133:18:7;;901:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;880:119;;;;-1:-1:-1;;;880:119:6;;4040:2:7;880:119:6;;;4022:21:7;;;4059:18;;;4052:30;4118:34;4098:18;;;4091:62;4170:18;;880:119:6;3838:356:7;880:119:6;1009:34;;-1:-1:-1;;;1009:34:6;;1024:10;1009:34;;;4373:51:7;4440:18;;;4433:34;;;1009:5:6;-1:-1:-1;;;;;1009:14:6;;;;4346:18:7;;1009:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;827:223;791:259::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4680:2:7;1998:73:0::1;::::0;::::1;4662:21:7::0;4719:2;4699:18;;;4692:30;4758:34;4738:18;;;4731:62;-1:-1:-1;;;4809:18:7;;;4802:36;4855:19;;1998:73:0::1;4478:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;404:180:7:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:7;;404:180;-1:-1:-1;404:180:7:o;589:286::-;648:6;701:2;689:9;680:7;676:23;672:32;669:52;;;717:1;714;707:12;669:52;743:23;;-1:-1:-1;;;;;795:31:7;;785:42;;775:70;;841:1;838;831:12;775:70;864:5;589:286;-1:-1:-1;;;589:286:7:o;880:184::-;950:6;1003:2;991:9;982:7;978:23;974:32;971:52;;;1019:1;1016;1009:12;971:52;-1:-1:-1;1042:16:7;;880:184;-1:-1:-1;880:184:7:o;1423:217::-;1463:1;1489;1479:132;;1533:10;1528:3;1524:20;1521:1;1514:31;1568:4;1565:1;1558:15;1596:4;1593:1;1586:15;1479:132;-1:-1:-1;1625:9:7;;1423:217::o;2370:277::-;2437:6;2490:2;2478:9;2469:7;2465:23;2461:32;2458:52;;;2506:1;2503;2496:12;2458:52;2538:9;2532:16;2591:5;2584:13;2577:21;2570:5;2567:32;2557:60;;2613:1;2610;2603:12;3207:356;3409:2;3391:21;;;3428:18;;;3421:30;3487:34;3482:2;3467:18;;3460:62;3554:2;3539:18;;3207:356::o;3568:265::-;3608:7;3674:1;3670;3666:6;3662:14;3659:1;3656:21;3651:1;3644:9;3637:17;3633:45;3630:168;;;3720:10;3715:3;3711:20;3708:1;3701:31;3755:4;3752:1;3745:15;3783:4;3780:1;3773:15;3630:168;-1:-1:-1;3818:9:7;;3568:265::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    168,
    1546
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x74E7493B GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x74E7493B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x3E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAF JUMP JUMPDEST PUSH2 0x10A PUSH2 0x446 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320746F2073656C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x713 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA1022B737BAB3B41022BA3432B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x393 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x398 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH2 0x415 PUSH1 0x0 PUSH2 0x661 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x6FA JUMP JUMPDEST LT ISZERO PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E207468652072657365727665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x735 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0x757 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25B JUMP JUMPDEST PUSH2 0x65E DUP2 PUSH2 0x661 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x730 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x7B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xE4 0x27 0xB6 0xF9 PUSH23 0x9BDE0A0B7BB10CDA534C8E81F28139B409B4A3EBA8BB4B TIMESTAMP DUP2 ISZERO PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B"
    },
    "12": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x74E7493B"
    },
    "25": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x74E7493B"
    },
    "36": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x121"
    },
    "40": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "47": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x141"
    },
    "51": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD0FEBE4C"
    },
    "58": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15F"
    },
    "62": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x167"
    },
    "73": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "REVERT",
      "path": "6"
    },
    "78": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "79": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "80": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x21DF0DA7"
    },
    "85": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x80"
    },
    "89": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "90": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "91": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x679AEFCE"
    },
    "96": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "97": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC"
    },
    "100": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "101": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6C11BCD3"
    },
    "107": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "108": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEA"
    },
    "111": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "118": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10C"
    },
    "122": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "126": {
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "DUP1",
      "path": "6"
    },
    "127": {
      "first_revert": true,
      "fn": null,
      "offset": [
        168,
        1546
      ],
      "op": "REVERT",
      "path": "6"
    },
    "128": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "129": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "130": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "DUP1",
      "path": "6"
    },
    "131": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "132": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C"
    },
    "135": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "138": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "DUP1",
      "path": "6"
    },
    "139": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "REVERT",
      "path": "6"
    },
    "140": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "141": {
      "op": "POP"
    },
    "142": {
      "fn": "TokenSwap.getToken",
      "offset": [
        772,
        777
      ],
      "op": "PUSH32",
      "path": "6",
      "statement": 0,
      "value": "0x0"
    },
    "175": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "176": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "178": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "op": "SUB"
    },
    "187": {
      "op": "SWAP1"
    },
    "188": {
      "op": "SWAP2"
    },
    "189": {
      "op": "AND"
    },
    "190": {
      "op": "DUP2"
    },
    "191": {
      "op": "MSTORE"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "194": {
      "op": "ADD"
    },
    "195": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "198": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "199": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "DUP1",
      "path": "6"
    },
    "200": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "201": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "SUB",
      "path": "6"
    },
    "202": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "203": {
      "fn": "TokenSwap.getToken",
      "offset": [
        697,
        785
      ],
      "op": "RETURN",
      "path": "6"
    },
    "204": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "205": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "206": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "207": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "208": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD8"
    },
    "211": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "212": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "214": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "DUP1",
      "path": "6"
    },
    "215": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "REVERT",
      "path": "6"
    },
    "216": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "217": {
      "op": "POP"
    },
    "218": {
      "fn": "TokenSwap.getRate",
      "offset": [
        680,
        684
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x1"
    },
    "220": {
      "fn": "TokenSwap.getRate",
      "offset": [
        680,
        684
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "221": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "223": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "224": {
      "op": "SWAP1"
    },
    "225": {
      "op": "DUP2"
    },
    "226": {
      "op": "MSTORE"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "229": {
      "op": "ADD"
    },
    "230": {
      "fn": "TokenSwap.getRate",
      "offset": [
        614,
        691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "233": {
      "op": "JUMP"
    },
    "234": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "235": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "236": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "237": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "238": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF6"
    },
    "241": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "242": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "244": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "DUP1",
      "path": "6"
    },
    "245": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "REVERT",
      "path": "6"
    },
    "246": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "247": {
      "op": "POP"
    },
    "248": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A"
    },
    "251": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105"
    },
    "254": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "255": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "257": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B1"
    },
    "260": {
      "fn": "TokenSwap.sellTokens",
      "jump": "i",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "261": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "262": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x187"
    },
    "265": {
      "fn": "TokenSwap.sellTokens",
      "jump": "i",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "266": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "267": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "STOP",
      "path": "6"
    },
    "268": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "289": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "290": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "291": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "DUP1",
      "path": "6"
    },
    "292": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "293": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D"
    },
    "296": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "297": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "299": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "DUP1",
      "path": "6"
    },
    "300": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "REVERT",
      "path": "6"
    },
    "301": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "302": {
      "op": "POP"
    },
    "303": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A"
    },
    "306": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13C"
    },
    "309": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "310": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "312": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6B1"
    },
    "315": {
      "fn": "TokenSwap.changeRate",
      "jump": "i",
      "offset": [
        521,
        608
      ],
      "op": "JUMP",
      "path": "6"
    },
    "316": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "317": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x417"
    },
    "320": {
      "fn": "TokenSwap.changeRate",
      "jump": "i",
      "offset": [
        521,
        608
      ],
      "op": "JUMP",
      "path": "6"
    },
    "321": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "323": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "324": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "325": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14D"
    },
    "328": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "329": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "331": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "op": "POP"
    },
    "335": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "337": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "op": "SUB"
    },
    "346": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        791,
        1050
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "352": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        791,
        1050
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10A"
    },
    "355": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        791,
        1050
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x446"
    },
    "358": {
      "fn": "TokenSwap.buyTokens",
      "jump": "i",
      "offset": [
        791,
        1050
      ],
      "op": "JUMP",
      "path": "6"
    },
    "359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "366": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "369": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "370": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "371": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "op": "POP"
    },
    "373": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A"
    },
    "376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182"
    },
    "379": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "382": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CA"
    },
    "385": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C6"
    },
    "390": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "392": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x40"
    },
    "394": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "395": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP2",
      "path": "6"
    },
    "404": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "405": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1155,
        1165
      ],
      "op": "CALLER",
      "path": "6"
    },
    "406": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "408": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP3",
      "path": "6"
    },
    "409": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ADD",
      "path": "6"
    },
    "410": {
      "op": "MSTORE"
    },
    "411": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1171,
        1178
      ],
      "op": "DUP2",
      "path": "6"
    },
    "412": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1171,
        1178
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "413": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1136
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "452": {
      "op": "SHL"
    },
    "453": {
      "op": "SUB"
    },
    "454": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1146
      ],
      "op": "AND",
      "path": "6"
    },
    "455": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "456": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1146
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "461": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1146
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "464": {
      "op": "ADD"
    },
    "465": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "467": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "469": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "470": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP1",
      "path": "6"
    },
    "471": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP4",
      "path": "6"
    },
    "472": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "SUB",
      "path": "6"
    },
    "473": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP2",
      "path": "6"
    },
    "474": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP7",
      "path": "6"
    },
    "475": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "GAS",
      "path": "6"
    },
    "476": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "477": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "478": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP1",
      "path": "6"
    },
    "479": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "480": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ED"
    },
    "483": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "484": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "485": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "487": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP1",
      "path": "6"
    },
    "488": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "489": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "490": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "492": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "493": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "494": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "POP",
      "path": "6"
    },
    "495": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "POP",
      "path": "6"
    },
    "496": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "POP",
      "path": "6"
    },
    "497": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "POP",
      "path": "6"
    },
    "498": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "500": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "501": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "502": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "504": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "NOT",
      "path": "6"
    },
    "505": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "507": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP3",
      "path": "6"
    },
    "508": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ADD",
      "path": "6"
    },
    "509": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "AND",
      "path": "6"
    },
    "510": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP3",
      "path": "6"
    },
    "511": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ADD",
      "path": "6"
    },
    "512": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP1",
      "path": "6"
    },
    "513": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "515": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "516": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "POP",
      "path": "6"
    },
    "517": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "DUP2",
      "path": "6"
    },
    "518": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "ADD",
      "path": "6"
    },
    "519": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "520": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x211"
    },
    "523": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "524": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "525": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FA"
    },
    "528": {
      "fn": "TokenSwap.sellTokens",
      "jump": "i",
      "offset": [
        1131,
        1167
      ],
      "op": "JUMP",
      "path": "6"
    },
    "529": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1167
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "530": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1178
      ],
      "op": "LT",
      "path": "6"
    },
    "531": {
      "branch": 16,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1131,
        1178
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "532": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x264"
    },
    "535": {
      "branch": 16,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "536": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "538": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "545": {
      "op": "SHL"
    },
    "546": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "DUP2",
      "path": "6"
    },
    "547": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "550": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "552": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "DUP3",
      "path": "6"
    },
    "553": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "ADD",
      "path": "6"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "559": {
      "op": "DUP3"
    },
    "560": {
      "op": "ADD"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320746F2073656C6C00000000000000"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "597": {
      "op": "DUP3"
    },
    "598": {
      "op": "ADD"
    },
    "599": {
      "op": "MSTORE"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "602": {
      "op": "ADD"
    },
    "603": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "604": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "606": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "607": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "DUP1",
      "path": "6"
    },
    "608": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "609": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "SUB",
      "path": "6"
    },
    "610": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "611": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "REVERT",
      "path": "6"
    },
    "612": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1110,
        1229
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "613": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1239,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "615": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1271,
        1275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "617": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1271,
        1275
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "618": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1268
      ],
      "op": "DUP3",
      "path": "6"
    },
    "619": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x274"
    },
    "622": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1275
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "623": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "624": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1275
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x713"
    },
    "627": {
      "fn": "TokenSwap.sellTokens",
      "jump": "i",
      "offset": [
        1261,
        1275
      ],
      "op": "JUMP",
      "path": "6"
    },
    "628": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1261,
        1275
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "629": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1239,
        1275
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "630": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1239,
        1275
      ],
      "op": "POP",
      "path": "6"
    },
    "631": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1318,
        1329
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 4
    },
    "632": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1293,
        1314
      ],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "633": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1293,
        1329
      ],
      "op": "LT",
      "path": "6"
    },
    "634": {
      "branch": 17,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1293,
        1329
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "635": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B9"
    },
    "638": {
      "branch": 17,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "639": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "641": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "642": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "646": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "648": {
      "op": "SHL"
    },
    "649": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "DUP2",
      "path": "6"
    },
    "650": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "653": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "655": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "DUP3",
      "path": "6"
    },
    "656": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "ADD",
      "path": "6"
    },
    "657": {
      "op": "MSTORE"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "662": {
      "op": "DUP3"
    },
    "663": {
      "op": "ADD"
    },
    "664": {
      "op": "MSTORE"
    },
    "665": {
      "op": "PUSH16",
      "value": "0x2737BA1022B737BAB3B41022BA3432B9"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "687": {
      "op": "DUP3"
    },
    "688": {
      "op": "ADD"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B"
    },
    "696": {
      "op": "JUMP"
    },
    "697": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1285,
        1350
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "698": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x40"
    },
    "700": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "701": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "710": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "711": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1379,
        1389
      ],
      "op": "CALLER",
      "path": "6"
    },
    "712": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "714": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP3",
      "path": "6"
    },
    "715": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ADD",
      "path": "6"
    },
    "716": {
      "op": "MSTORE"
    },
    "717": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1399,
        1403
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "720": {
      "op": "DUP3"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "725": {
      "op": "DUP2"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "op": "DUP4"
    },
    "728": {
      "op": "SWAP1"
    },
    "729": {
      "op": "MSTORE"
    },
    "730": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1365
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1378
      ],
      "op": "AND",
      "path": "6"
    },
    "772": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "773": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1378
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "778": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1378
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "784": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "786": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "787": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "788": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP4",
      "path": "6"
    },
    "789": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "SUB",
      "path": "6"
    },
    "790": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "791": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "793": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP8",
      "path": "6"
    },
    "794": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "GAS",
      "path": "6"
    },
    "795": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "CALL",
      "path": "6"
    },
    "796": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "797": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "798": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "799": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x32C"
    },
    "802": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "803": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "804": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "806": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "807": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "808": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "809": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "811": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "REVERT",
      "path": "6"
    },
    "812": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "813": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "POP",
      "path": "6"
    },
    "814": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "POP",
      "path": "6"
    },
    "815": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "POP",
      "path": "6"
    },
    "816": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "POP",
      "path": "6"
    },
    "817": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "819": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "820": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "821": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "823": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "NOT",
      "path": "6"
    },
    "824": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "826": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP3",
      "path": "6"
    },
    "827": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ADD",
      "path": "6"
    },
    "828": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "AND",
      "path": "6"
    },
    "829": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP3",
      "path": "6"
    },
    "830": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ADD",
      "path": "6"
    },
    "831": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP1",
      "path": "6"
    },
    "832": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "834": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "835": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "POP",
      "path": "6"
    },
    "836": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "DUP2",
      "path": "6"
    },
    "837": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "ADD",
      "path": "6"
    },
    "838": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "839": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x350"
    },
    "842": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "843": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "844": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x735"
    },
    "847": {
      "fn": "TokenSwap.sellTokens",
      "jump": "i",
      "offset": [
        1360,
        1414
      ],
      "op": "JUMP",
      "path": "6"
    },
    "848": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1360,
        1414
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "852": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "853": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1425,
        1437
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "855": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1425,
        1437
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "856": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1451,
        1461
      ],
      "op": "CALLER",
      "path": "6"
    },
    "857": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1451,
        1461
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "858": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1475,
        1486
      ],
      "op": "DUP4",
      "path": "6"
    },
    "859": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1475,
        1486
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "860": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1425,
        1437
      ],
      "op": "DUP4",
      "path": "6"
    },
    "861": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "862": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1425,
        1437
      ],
      "op": "DUP2",
      "path": "6"
    },
    "863": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "864": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1475,
        1486
      ],
      "op": "DUP6",
      "path": "6"
    },
    "865": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1451,
        1461
      ],
      "op": "DUP8",
      "path": "6"
    },
    "866": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "GAS",
      "path": "6"
    },
    "867": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "CALL",
      "path": "6"
    },
    "868": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "869": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "870": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "871": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "872": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "873": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP1",
      "path": "6"
    },
    "874": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "876": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "877": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "EQ",
      "path": "6"
    },
    "878": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x393"
    },
    "881": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "882": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "884": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "885": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "886": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "887": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "889": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "NOT",
      "path": "6"
    },
    "890": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "892": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "893": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "ADD",
      "path": "6"
    },
    "894": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "AND",
      "path": "6"
    },
    "895": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "896": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "ADD",
      "path": "6"
    },
    "897": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "899": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "900": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "901": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "902": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "903": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "904": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "906": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "908": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "DUP5",
      "path": "6"
    },
    "909": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "ADD",
      "path": "6"
    },
    "910": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "911": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "914": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "JUMP",
      "path": "6"
    },
    "915": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "916": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "918": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "919": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "920": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "921": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1443,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "922": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1424,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "923": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1424,
        1491
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "924": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1424,
        1491
      ],
      "op": "POP",
      "path": "6"
    },
    "925": {
      "branch": 18,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1509,
        1516
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 6
    },
    "926": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DC"
    },
    "929": {
      "branch": 18,
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "930": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "932": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "933": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "937": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "DUP2",
      "path": "6"
    },
    "941": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "944": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "946": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "DUP3",
      "path": "6"
    },
    "947": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "ADD",
      "path": "6"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "953": {
      "op": "DUP3"
    },
    "954": {
      "op": "ADD"
    },
    "955": {
      "op": "MSTORE"
    },
    "956": {
      "op": "PUSH16",
      "value": "0x2A3930B739B332B9103330B4B632B217"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B"
    },
    "987": {
      "op": "JUMP"
    },
    "988": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1501,
        1537
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "989": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1100,
        1544
      ],
      "op": "POP",
      "path": "6"
    },
    "990": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1100,
        1544
      ],
      "op": "POP",
      "path": "6"
    },
    "991": {
      "fn": "TokenSwap.sellTokens",
      "offset": [
        1056,
        1544
      ],
      "op": "POP",
      "path": "6"
    },
    "992": {
      "fn": "TokenSwap.sellTokens",
      "jump": "o",
      "offset": [
        1056,
        1544
      ],
      "op": "JUMP",
      "path": "6"
    },
    "993": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "996": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "op": "SUB"
    },
    "1005": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 7
    },
    "1007": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1008": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40B"
    },
    "1011": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1012": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1014": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1015": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1023": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "1030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1031": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1034": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1036": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x415"
    },
    "1039": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1041": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x661"
    },
    "1044": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1045": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1046": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1047": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        521,
        608
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1048": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1050": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1057": {
      "op": "SHL"
    },
    "1058": {
      "op": "SUB"
    },
    "1059": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1060": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1061": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1062": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x441"
    },
    "1065": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1068": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1069": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1080": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1081": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "1084": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1088": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1089": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1090": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        586,
        590
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x1"
    },
    "1092": {
      "fn": "TokenSwap.changeRate",
      "offset": [
        586,
        601
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1093": {
      "fn": "TokenSwap.changeRate",
      "jump": "o",
      "offset": [
        521,
        608
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1094": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        791,
        1050
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1095": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        837,
        851
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1097": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        866,
        870
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1099": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        866,
        870
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1100": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        863
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1101": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x456"
    },
    "1104": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        870
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1105": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1106": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        870
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x78C"
    },
    "1109": {
      "fn": "TokenSwap.buyTokens",
      "jump": "i",
      "offset": [
        854,
        870
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1110": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        854,
        870
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1111": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x40"
    },
    "1113": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1114": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1123": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1124": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        925,
        929
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "1125": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1127": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1128": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        837,
        870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1131": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        837,
        870
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        837,
        870
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1134": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        837,
        870
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1141": {
      "op": "SHL"
    },
    "1142": {
      "op": "SUB"
    },
    "1143": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        906
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1176": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        916
      ],
      "op": "AND",
      "path": "6"
    },
    "1177": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        916
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1178": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        916
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1183": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        916
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1189": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1191": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1192": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1193": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1194": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "SUB",
      "path": "6"
    },
    "1195": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1196": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1197": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "GAS",
      "path": "6"
    },
    "1198": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1199": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1200": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1201": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1202": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4BF"
    },
    "1205": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1206": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1207": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1209": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1210": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1211": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1212": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1214": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1215": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1216": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "POP",
      "path": "6"
    },
    "1217": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "POP",
      "path": "6"
    },
    "1218": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "POP",
      "path": "6"
    },
    "1219": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "POP",
      "path": "6"
    },
    "1220": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1222": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1223": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1224": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1226": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "NOT",
      "path": "6"
    },
    "1227": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1229": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1230": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1231": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "AND",
      "path": "6"
    },
    "1232": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1233": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1234": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1235": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1237": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1238": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "POP",
      "path": "6"
    },
    "1239": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1240": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "ADD",
      "path": "6"
    },
    "1241": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1242": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4E3"
    },
    "1245": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1246": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1247": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6FA"
    },
    "1250": {
      "fn": "TokenSwap.buyTokens",
      "jump": "i",
      "offset": [
        901,
        931
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1251": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        931
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1252": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        941
      ],
      "op": "LT",
      "path": "6"
    },
    "1253": {
      "branch": 19,
      "fn": "TokenSwap.buyTokens",
      "offset": [
        901,
        941
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1254": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x531"
    },
    "1257": {
      "branch": 19,
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1258": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1260": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1267": {
      "op": "SHL"
    },
    "1268": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1269": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1272": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1274": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1275": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "ADD",
      "path": "6"
    },
    "1276": {
      "op": "DUP2"
    },
    "1277": {
      "op": "SWAP1"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1281": {
      "op": "DUP3"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "MSTORE"
    },
    "1284": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820746F6B656E7320696E207468652072657365727665"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1319": {
      "op": "DUP3"
    },
    "1320": {
      "op": "ADD"
    },
    "1321": {
      "op": "MSTORE"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25B"
    },
    "1328": {
      "op": "JUMP"
    },
    "1329": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        880,
        999
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1330": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x40"
    },
    "1332": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1333": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1340": {
      "op": "SHL"
    },
    "1341": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1342": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1343": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1024,
        1034
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1344": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1346": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1347": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ADD",
      "path": "6"
    },
    "1348": {
      "op": "MSTORE"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1351": {
      "op": "DUP2"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "DUP3"
    },
    "1354": {
      "op": "SWAP1"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1014
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "op": "SUB"
    },
    "1397": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1023
      ],
      "op": "AND",
      "path": "6"
    },
    "1398": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1023
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1399": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1023
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "1404": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1023
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1410": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1412": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1413": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1414": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1415": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "SUB",
      "path": "6"
    },
    "1416": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1417": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1419": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1420": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "GAS",
      "path": "6"
    },
    "1421": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "CALL",
      "path": "6"
    },
    "1422": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1423": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1424": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1425": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59E"
    },
    "1428": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1429": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1430": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1432": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1433": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1434": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1435": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1437": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1438": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1439": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1440": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1441": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1442": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1443": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1445": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1446": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1447": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1449": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "NOT",
      "path": "6"
    },
    "1450": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1452": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1453": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ADD",
      "path": "6"
    },
    "1454": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "AND",
      "path": "6"
    },
    "1455": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1456": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ADD",
      "path": "6"
    },
    "1457": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1458": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1460": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1461": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1462": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1463": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "ADD",
      "path": "6"
    },
    "1464": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1465": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C2"
    },
    "1468": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1469": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1470": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x735"
    },
    "1473": {
      "fn": "TokenSwap.buyTokens",
      "jump": "i",
      "offset": [
        1009,
        1043
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1474": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1475": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        1009,
        1043
      ],
      "op": "POP",
      "path": "6"
    },
    "1476": {
      "fn": "TokenSwap.buyTokens",
      "offset": [
        827,
        1050
      ],
      "op": "POP",
      "path": "6"
    },
    "1477": {
      "fn": "TokenSwap.buyTokens",
      "jump": "o",
      "offset": [
        791,
        1050
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1479": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1481": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1491": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1492": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1493": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F0"
    },
    "1496": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1497": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1499": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1500": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1506": {
      "op": "SHL"
    },
    "1507": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1508": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1509": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1511": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1512": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "1515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x757"
    },
    "1519": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1520": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1527": {
      "op": "SHL"
    },
    "1528": {
      "op": "SUB"
    },
    "1529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1530": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x655"
    },
    "1534": {
      "branch": 20,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1553": {
      "op": "MSTORE"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "MSTORE"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1616": {
      "op": "ADD"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "1620": {
      "op": "JUMP"
    },
    "1621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x65E"
    },
    "1625": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x661"
    },
    "1629": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1632": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1634": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1637": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "op": "SUB"
    },
    "1646": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1647": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1648": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "op": "NOT"
    },
    "1658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1659": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1671": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1672": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1673": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1707": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1709": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1710": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1711": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1712": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1713": {
      "op": "JUMPDEST"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "DUP5"
    },
    "1720": {
      "op": "SUB"
    },
    "1721": {
      "op": "SLT"
    },
    "1722": {
      "op": "ISZERO"
    },
    "1723": {
      "op": "PUSH2",
      "value": "0x6C3"
    },
    "1726": {
      "op": "JUMPI"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1729": {
      "op": "DUP1"
    },
    "1730": {
      "op": "REVERT"
    },
    "1731": {
      "op": "JUMPDEST"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "CALLDATALOAD"
    },
    "1734": {
      "op": "SWAP2"
    },
    "1735": {
      "op": "SWAP1"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "jump": "o",
      "op": "JUMP"
    },
    "1738": {
      "op": "JUMPDEST"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "DUP5"
    },
    "1745": {
      "op": "SUB"
    },
    "1746": {
      "op": "SLT"
    },
    "1747": {
      "op": "ISZERO"
    },
    "1748": {
      "op": "PUSH2",
      "value": "0x6DC"
    },
    "1751": {
      "op": "JUMPI"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1754": {
      "op": "DUP1"
    },
    "1755": {
      "op": "REVERT"
    },
    "1756": {
      "op": "JUMPDEST"
    },
    "1757": {
      "op": "DUP2"
    },
    "1758": {
      "op": "CALLDATALOAD"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "op": "SUB"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "AND"
    },
    "1769": {
      "op": "DUP2"
    },
    "1770": {
      "op": "EQ"
    },
    "1771": {
      "op": "PUSH2",
      "value": "0x6F3"
    },
    "1774": {
      "op": "JUMPI"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1777": {
      "op": "DUP1"
    },
    "1778": {
      "op": "REVERT"
    },
    "1779": {
      "op": "JUMPDEST"
    },
    "1780": {
      "op": "SWAP4"
    },
    "1781": {
      "op": "SWAP3"
    },
    "1782": {
      "op": "POP"
    },
    "1783": {
      "op": "POP"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "jump": "o",
      "op": "JUMP"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1791": {
      "op": "DUP3"
    },
    "1792": {
      "op": "DUP5"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "op": "SLT"
    },
    "1795": {
      "op": "ISZERO"
    },
    "1796": {
      "op": "PUSH2",
      "value": "0x70C"
    },
    "1799": {
      "op": "JUMPI"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "op": "DUP1"
    },
    "1803": {
      "op": "REVERT"
    },
    "1804": {
      "op": "JUMPDEST"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "op": "MLOAD"
    },
    "1807": {
      "op": "SWAP2"
    },
    "1808": {
      "op": "SWAP1"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "jump": "o",
      "op": "JUMP"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1814": {
      "op": "DUP3"
    },
    "1815": {
      "op": "PUSH2",
      "value": "0x730"
    },
    "1818": {
      "op": "JUMPI"
    },
    "1819": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1829": {
      "op": "MSTORE"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1834": {
      "op": "MSTORE"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1839": {
      "op": "REVERT"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "DIV"
    },
    "1843": {
      "op": "SWAP1"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1850": {
      "op": "DUP3"
    },
    "1851": {
      "op": "DUP5"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "op": "SLT"
    },
    "1854": {
      "op": "ISZERO"
    },
    "1855": {
      "op": "PUSH2",
      "value": "0x747"
    },
    "1858": {
      "op": "JUMPI"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1861": {
      "op": "DUP1"
    },
    "1862": {
      "op": "REVERT"
    },
    "1863": {
      "op": "JUMPDEST"
    },
    "1864": {
      "op": "DUP2"
    },
    "1865": {
      "op": "MLOAD"
    },
    "1866": {
      "op": "DUP1"
    },
    "1867": {
      "op": "ISZERO"
    },
    "1868": {
      "op": "ISZERO"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "EQ"
    },
    "1871": {
      "op": "PUSH2",
      "value": "0x6F3"
    },
    "1874": {
      "op": "JUMPI"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1877": {
      "op": "DUP1"
    },
    "1878": {
      "op": "REVERT"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1882": {
      "op": "DUP1"
    },
    "1883": {
      "op": "DUP3"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "op": "DUP2"
    },
    "1886": {
      "op": "DUP2"
    },
    "1887": {
      "op": "ADD"
    },
    "1888": {
      "op": "MSTORE"
    },
    "1889": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1924": {
      "op": "DUP3"
    },
    "1925": {
      "op": "ADD"
    },
    "1926": {
      "op": "MSTORE"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1929": {
      "op": "ADD"
    },
    "1930": {
      "op": "SWAP1"
    },
    "1931": {
      "jump": "o",
      "op": "JUMP"
    },
    "1932": {
      "op": "JUMPDEST"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1935": {
      "op": "DUP2"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1938": {
      "op": "NOT"
    },
    "1939": {
      "op": "DIV"
    },
    "1940": {
      "op": "DUP4"
    },
    "1941": {
      "op": "GT"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "ISZERO"
    },
    "1944": {
      "op": "ISZERO"
    },
    "1945": {
      "op": "AND"
    },
    "1946": {
      "op": "ISZERO"
    },
    "1947": {
      "op": "PUSH2",
      "value": "0x7B4"
    },
    "1950": {
      "op": "JUMPI"
    },
    "1951": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "MSTORE"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1971": {
      "op": "REVERT"
    },
    "1972": {
      "op": "JUMPDEST"
    },
    "1973": {
      "op": "POP"
    },
    "1974": {
      "op": "MUL"
    },
    "1975": {
      "op": "SWAP1"
    },
    "1976": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7c4bd7de081981c31c90d06843586be57ee5052d",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TokenSwap is Ownable {\n    IERC20 immutable token;\n    uint256 rate;\n\n    constructor(address _token, uint256 _rate) {\n        token = IERC20(_token);\n        rate = _rate;\n        // ! After Deployment, Tranfer Tokens to Contract Address\n        // ! Before Sell Tokens, Approve Contract Address to Spend Tokens of Specific Address\n    }\n\n    function changeRate(uint256 _newRate) public onlyOwner {\n        rate = _newRate;\n    }\n\n    function getRate() public view returns (uint256) {\n        return rate;\n    }\n\n    function getToken() public view returns (address) {\n        return address(token);\n    }\n\n    function buyTokens() public payable {\n        uint256 amount = msg.value * rate;\n        require(\n            token.balanceOf(address(this)) >= amount,\n            \"Not enough tokens in the reserve\"\n        );\n        token.transfer(msg.sender, amount);\n    }\n\n    function sellTokens(uint256 _amount) public {\n        require(\n            token.balanceOf(address(msg.sender)) >= _amount,\n            \"Not enough tokens to sell\"\n        );\n        uint256 etherAmount = _amount / rate;\n        require(address(this).balance >= etherAmount, \"Not Enough Ether\");\n        token.transferFrom(msg.sender, address(this), _amount);\n        (bool success, ) = payable(msg.sender).call{value: etherAmount}(\"\");\n        require(success, \"Transfer failed.\");\n    }\n}\n",
  "sourceMap": "168:1378:6:-:0;;;251:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;-1:-1:-1;;;;;304:22:6;;;;;336:4;:12;168:1378;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:351:7:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:7;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:7:o;:::-;168:1378:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/TokenSwap.sol",
  "type": "contract"
}